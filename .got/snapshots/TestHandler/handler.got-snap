map[string]*jschema.Schema{
    "A": &jschema.Schema{
        Title: "AA",
        Description: "type A",
        Default: nil,
        Examples: []jschema.JVal(nil),
        AnyOf: []*jschema.Schema(nil),
        Ref: (*jschema.Ref)(nil),
        Type: "number",
        Enum: []jschema.JVal(nil),
        Properties: jschema.Properties(nil),
        PatternProperties: jschema.Properties(nil),
        Format: "",
        Max: (*float64)(nil),
        Min: (*float64)(nil),
        MaxLen: (*float64)(nil),
        MinLen: (*float64)(nil),
        Pattern: "",
        Items: (*jschema.Schema)(nil),
        MinItems: (*int)(nil),
        MaxItems: (*int)(nil),
        Required: jschema.Required(nil),
        AdditionalProperties: (*bool)(nil),
        Defs: jschema.Types(nil),
    },
    "B": &jschema.Schema{
        Title: "B",
        Description: "github.com/ysmood/jschema_test.B",
        Default: nil,
        Examples: []jschema.JVal(nil),
        AnyOf: []*jschema.Schema(nil),
        Ref: (*jschema.Ref)(nil),
        Type: "object",
        Enum: []jschema.JVal(nil),
        Properties: jschema.Properties{
            "A": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: &jschema.Ref{
                    Defs: "#/$defs",
                    Package: "github.com/ysmood/jschema_test",
                    Name: "A",
                    Hash: "da2845306b783d9fc7d2fe8836b55216",
                    ID: "A",
                },
                Type: "",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
        },
        PatternProperties: jschema.Properties(nil),
        Format: "",
        Max: (*float64)(nil),
        Min: (*float64)(nil),
        MaxLen: (*float64)(nil),
        MinLen: (*float64)(nil),
        Pattern: "",
        Items: (*jschema.Schema)(nil),
        MinItems: (*int)(nil),
        MaxItems: (*int)(nil),
        Required: jschema.Required{
            "A",
        },
        AdditionalProperties: gop.Ptr(false).(*bool),
        Defs: jschema.Types(nil),
    },
}