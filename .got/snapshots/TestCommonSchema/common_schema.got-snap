map[string]*jschema.Schema{
    "Enum": &jschema.Schema{
        Title: "Enum",
        Description: "github.com/ysmood/jschema/lib/test.Enum",
        Default: nil,
        Examples: []jschema.JVal(nil),
        AnyOf: []*jschema.Schema(nil),
        Ref: (*jschema.Ref)(nil),
        Type: "",
        Enum: []jschema.JVal{
            "one",
            "three",
            "two",
        },
        Properties: jschema.Properties(nil),
        PatternProperties: jschema.Properties(nil),
        Format: "",
        Max: (*float64)(nil),
        Min: (*float64)(nil),
        MaxLen: (*float64)(nil),
        MinLen: (*float64)(nil),
        Pattern: "",
        Items: (*jschema.Schema)(nil),
        MinItems: (*int)(nil),
        MaxItems: (*int)(nil),
        Required: jschema.Required(nil),
        AdditionalProperties: (*bool)(nil),
        Defs: jschema.Types(nil),
    },
    "Node1": &jschema.Schema{
        Title: "Node1",
        Description: "github.com/ysmood/jschema_test.Node1",
        Default: nil,
        Examples: []jschema.JVal(nil),
        AnyOf: []*jschema.Schema(nil),
        Ref: (*jschema.Ref)(nil),
        Type: "object",
        Enum: []jschema.JVal(nil),
        Properties: jschema.Properties{
            "Arr": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "array",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: &jschema.Schema{
                    Title: "",
                    Description: "",
                    Default: nil,
                    Examples: []jschema.JVal(nil),
                    AnyOf: []*jschema.Schema(nil),
                    Ref: (*jschema.Ref)(nil),
                    Type: "number",
                    Enum: []jschema.JVal(nil),
                    Properties: jschema.Properties(nil),
                    PatternProperties: jschema.Properties(nil),
                    Format: "",
                    Max: (*float64)(nil),
                    Min: gop.Ptr(0.0).(*float64),
                    MaxLen: (*float64)(nil),
                    MinLen: (*float64)(nil),
                    Pattern: "",
                    Items: (*jschema.Schema)(nil),
                    MinItems: (*int)(nil),
                    MaxItems: (*int)(nil),
                    Required: jschema.Required(nil),
                    AdditionalProperties: (*bool)(nil),
                    Defs: jschema.Types(nil),
                },
                MinItems: gop.Ptr(2).(*int),
                MaxItems: gop.Circular("Node1", "Properties", "Arr", "MaxItems").(*int),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "Enum": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: &jschema.Ref{
                    Defs: "#/$defs",
                    Package: "github.com/ysmood/jschema/lib/test",
                    Name: "Enum",
                    Hash: "aeef765216cc5e1a6e4b6cd029572c20",
                    ID: "Enum",
                },
                Type: "",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "EnumPtr": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema{
                    &jschema.Schema{
                        Title: "",
                        Description: "",
                        Default: nil,
                        Examples: []jschema.JVal(nil),
                        AnyOf: []*jschema.Schema(nil),
                        Ref: &jschema.Ref{
                            Defs: "#/$defs",
                            Package: "github.com/ysmood/jschema/lib/test",
                            Name: "Enum",
                            Hash: "aeef765216cc5e1a6e4b6cd029572c20",
                            ID: "Enum",
                        },
                        Type: "",
                        Enum: []jschema.JVal(nil),
                        Properties: jschema.Properties(nil),
                        PatternProperties: jschema.Properties(nil),
                        Format: "",
                        Max: (*float64)(nil),
                        Min: (*float64)(nil),
                        MaxLen: (*float64)(nil),
                        MinLen: (*float64)(nil),
                        Pattern: "",
                        Items: (*jschema.Schema)(nil),
                        MinItems: (*int)(nil),
                        MaxItems: (*int)(nil),
                        Required: jschema.Required(nil),
                        AdditionalProperties: (*bool)(nil),
                        Defs: jschema.Types(nil),
                    },
                    &jschema.Schema{
                        Title: "",
                        Description: "",
                        Default: nil,
                        Examples: []jschema.JVal(nil),
                        AnyOf: []*jschema.Schema(nil),
                        Ref: (*jschema.Ref)(nil),
                        Type: "null",
                        Enum: []jschema.JVal(nil),
                        Properties: jschema.Properties(nil),
                        PatternProperties: jschema.Properties(nil),
                        Format: "",
                        Max: (*float64)(nil),
                        Min: (*float64)(nil),
                        MaxLen: (*float64)(nil),
                        MinLen: (*float64)(nil),
                        Pattern: "",
                        Items: (*jschema.Schema)(nil),
                        MinItems: (*int)(nil),
                        MaxItems: (*int)(nil),
                        Required: jschema.Required(nil),
                        AdditionalProperties: (*bool)(nil),
                        Defs: jschema.Types(nil),
                    },
                },
                Ref: (*jschema.Ref)(nil),
                Type: "",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "Obj": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema{
                    &jschema.Schema{
                        Title: "",
                        Description: "",
                        Default: nil,
                        Examples: []jschema.JVal(nil),
                        AnyOf: []*jschema.Schema(nil),
                        Ref: &jschema.Ref{
                            Defs: "#/$defs",
                            Package: "github.com/ysmood/jschema_test",
                            Name: "Node2",
                            Hash: "6a89fa553bde63b0f948d3a62d5dd88e",
                            ID: "Node2",
                        },
                        Type: "",
                        Enum: []jschema.JVal(nil),
                        Properties: jschema.Properties(nil),
                        PatternProperties: jschema.Properties(nil),
                        Format: "",
                        Max: (*float64)(nil),
                        Min: (*float64)(nil),
                        MaxLen: (*float64)(nil),
                        MinLen: (*float64)(nil),
                        Pattern: "",
                        Items: (*jschema.Schema)(nil),
                        MinItems: (*int)(nil),
                        MaxItems: (*int)(nil),
                        Required: jschema.Required(nil),
                        AdditionalProperties: (*bool)(nil),
                        Defs: jschema.Types(nil),
                    },
                    &jschema.Schema{
                        Title: "",
                        Description: "",
                        Default: nil,
                        Examples: []jschema.JVal(nil),
                        AnyOf: []*jschema.Schema(nil),
                        Ref: (*jschema.Ref)(nil),
                        Type: "null",
                        Enum: []jschema.JVal(nil),
                        Properties: jschema.Properties(nil),
                        PatternProperties: jschema.Properties(nil),
                        Format: "",
                        Max: (*float64)(nil),
                        Min: (*float64)(nil),
                        MaxLen: (*float64)(nil),
                        MinLen: (*float64)(nil),
                        Pattern: "",
                        Items: (*jschema.Schema)(nil),
                        MinItems: (*int)(nil),
                        MaxItems: (*int)(nil),
                        Required: jschema.Required(nil),
                        AdditionalProperties: (*bool)(nil),
                        Defs: jschema.Types(nil),
                    },
                },
                Ref: (*jschema.Ref)(nil),
                Type: "",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "Slice": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "array",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: &jschema.Schema{
                    Title: "",
                    Description: "",
                    Default: nil,
                    Examples: []jschema.JVal(nil),
                    AnyOf: []*jschema.Schema(nil),
                    Ref: &jschema.Ref{
                        Defs: "#/$defs",
                        Package: "github.com/ysmood/jschema_test",
                        Name: "Node1",
                        Hash: "fa6536f77f2f93f186d51bab84ac3738",
                        ID: "Node1",
                    },
                    Type: "",
                    Enum: []jschema.JVal(nil),
                    Properties: jschema.Properties(nil),
                    PatternProperties: jschema.Properties(nil),
                    Format: "",
                    Max: (*float64)(nil),
                    Min: (*float64)(nil),
                    MaxLen: (*float64)(nil),
                    MinLen: (*float64)(nil),
                    Pattern: "",
                    Items: (*jschema.Schema)(nil),
                    MinItems: (*int)(nil),
                    MaxItems: (*int)(nil),
                    Required: jschema.Required(nil),
                    AdditionalProperties: (*bool)(nil),
                    Defs: jschema.Types(nil),
                },
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "Str": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "string",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "email",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: gop.Ptr(10.0).(*float64),
                MinLen: gop.Ptr(1.0).(*float64),
                Pattern: ".",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "bool": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "boolean",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "num": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "integer",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
        },
        PatternProperties: jschema.Properties(nil),
        Format: "",
        Max: (*float64)(nil),
        Min: (*float64)(nil),
        MaxLen: (*float64)(nil),
        MinLen: (*float64)(nil),
        Pattern: "",
        Items: (*jschema.Schema)(nil),
        MinItems: (*int)(nil),
        MaxItems: (*int)(nil),
        Required: jschema.Required{
            "Str",
            "bool",
            "Slice",
            "Arr",
            "Obj",
            "Enum",
            "EnumPtr",
        },
        AdditionalProperties: gop.Ptr(false).(*bool),
        Defs: jschema.Types(nil),
    },
    "Node2": &jschema.Schema{
        Title: "Node2",
        Description: "github.com/ysmood/jschema_test.Node2",
        Default: nil,
        Examples: []jschema.JVal(nil),
        AnyOf: []*jschema.Schema(nil),
        Ref: (*jschema.Ref)(nil),
        Type: "object",
        Enum: []jschema.JVal(nil),
        Properties: jschema.Properties{
            "Any": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties(nil),
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
            "Map": &jschema.Schema{
                Title: "",
                Description: "",
                Default: nil,
                Examples: []jschema.JVal(nil),
                AnyOf: []*jschema.Schema(nil),
                Ref: (*jschema.Ref)(nil),
                Type: "object",
                Enum: []jschema.JVal(nil),
                Properties: jschema.Properties(nil),
                PatternProperties: jschema.Properties{
                    "": &jschema.Schema{
                        Title: "",
                        Description: "",
                        Default: nil,
                        Examples: []jschema.JVal(nil),
                        AnyOf: []*jschema.Schema(nil),
                        Ref: (*jschema.Ref)(nil),
                        Type: "number",
                        Enum: []jschema.JVal(nil),
                        Properties: jschema.Properties(nil),
                        PatternProperties: jschema.Properties(nil),
                        Format: "",
                        Max: (*float64)(nil),
                        Min: (*float64)(nil),
                        MaxLen: (*float64)(nil),
                        MinLen: (*float64)(nil),
                        Pattern: "",
                        Items: (*jschema.Schema)(nil),
                        MinItems: (*int)(nil),
                        MaxItems: (*int)(nil),
                        Required: jschema.Required(nil),
                        AdditionalProperties: (*bool)(nil),
                        Defs: jschema.Types(nil),
                    },
                },
                Format: "",
                Max: (*float64)(nil),
                Min: (*float64)(nil),
                MaxLen: (*float64)(nil),
                MinLen: (*float64)(nil),
                Pattern: "",
                Items: (*jschema.Schema)(nil),
                MinItems: (*int)(nil),
                MaxItems: (*int)(nil),
                Required: jschema.Required(nil),
                AdditionalProperties: (*bool)(nil),
                Defs: jschema.Types(nil),
            },
        },
        PatternProperties: jschema.Properties(nil),
        Format: "",
        Max: (*float64)(nil),
        Min: (*float64)(nil),
        MaxLen: (*float64)(nil),
        MinLen: (*float64)(nil),
        Pattern: "",
        Items: (*jschema.Schema)(nil),
        MinItems: (*int)(nil),
        MaxItems: (*int)(nil),
        Required: jschema.Required{
            "Map",
            "Any",
        },
        AdditionalProperties: gop.Ptr(false).(*bool),
        Defs: jschema.Types(nil),
    },
}